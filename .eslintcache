[{"C:\\Users\\user\\Desktop\\homeworkreact\\src\\index.js":"1","C:\\Users\\user\\Desktop\\homeworkreact\\src\\reportWebVitals.js":"2","C:\\Users\\user\\Desktop\\homeworkreact\\src\\App.js":"3","C:\\Users\\user\\Desktop\\homeworkreact\\src\\components\\ComponentsAdd.js":"4","C:\\Users\\user\\Desktop\\homeworkreact\\src\\components\\ComponentsAcordion.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":3190,"mtime":1611198264234,"results":"9","hashOfConfig":"7"},{"size":2051,"mtime":1611189950207,"results":"10","hashOfConfig":"7"},{"size":4444,"mtime":1611197599452,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1atnlzh",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"14"},"C:\\Users\\user\\Desktop\\homeworkreact\\src\\index.js",[],["25","26"],"C:\\Users\\user\\Desktop\\homeworkreact\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Desktop\\homeworkreact\\src\\App.js",[],"C:\\Users\\user\\Desktop\\homeworkreact\\src\\components\\ComponentsAdd.js",[],["27","28"],"C:\\Users\\user\\Desktop\\homeworkreact\\src\\components\\ComponentsAcordion.js",["29"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Row, Form, Button, Card, ListGroup } from \"react-bootstrap\";\r\nimport Accordion from \"react-bootstrap/Accordion\";\r\nimport \"./ComponentsAcordion.css\";\r\n\r\nexport const ComponentsAcordion = ({\r\n  update,\r\n  item,\r\n  onChange,\r\n  index,\r\n  toTrash\r\n}) => (\r\n  <Accordion id=\"accordionid\" className=\"acordion justify-content-center mx-auto col-md-9\">\r\n    <Card>\r\n      <Accordion.Toggle\r\n        id=\"accordiontog1\"\r\n        className=\"bg-dark\"\r\n        as={Button}\r\n        variant=\"text\"\r\n        eventKey=\"0\"\r\n      >\r\n        <ListGroup>\r\n          <ListGroup.Item\r\n            id=\"listitem\"\r\n            className=\"bg-dark text-white text-center\"\r\n          >\r\n            User ID: {item.id}\r\n          </ListGroup.Item>\r\n        </ListGroup>\r\n      </Accordion.Toggle>\r\n\r\n      <Accordion.Collapse eventKey=\"0\" >\r\n        <Card.Body className=\"bg-secondary text-white\">\r\n          <ListGroup>\r\n            {item.isEditing ? (\r\n              <div className=\"mb-4\">\r\n                <ListGroup.Item>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    className=\"\"\r\n                    placeholder=\"Name\"\r\n                    value={item.name}\r\n                    onChange={event => onChange(event, index)}\r\n                    required\r\n                  />\r\n                </ListGroup.Item>\r\n                <ListGroup.Item className=\"text-center\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"surname\"\r\n                    placeholder=\"Surname\"\r\n                    value={item.surname}\r\n                    onChange={event => onChange(event, index)}\r\n                    required\r\n                  />\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item className=\"text-center\">\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    value={item.email}\r\n                    onChange={event => onChange(event, index)}\r\n                    required\r\n                  />\r\n                </ListGroup.Item>\r\n                <ListGroup.Item className=\"text-center\">\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    name=\"notes\"\r\n                    placeholder=\"Notes\"\r\n                    value={item.notes}\r\n                    onChange={event => onChange(event, index)}\r\n                    required\r\n                  />\r\n                </ListGroup.Item>\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <Card.Title className=\"text-center font-italic font-weight-normal\">{item.name}</Card.Title>\r\n\r\n                <Row className=\"justify-content-center  font-italic mb-2\">\r\n                  <Card.Text\r\n                    className=\"px-4 col-6 font-size-large text-center\"\r\n                  >\r\n                    <span>{item.surname}</span>\r\n                  </Card.Text>\r\n                </Row>\r\n                <Row className=\"justify-content-center font-italic mb-2\">\r\n                  <Card.Text\r\n                    className=\"px-4 text-center\"\r\n                  >\r\n                    <span>{item.email}</span>\r\n                  </Card.Text>\r\n                </Row>\r\n                <Row className=\"mb-4\">\r\n                  <Card.Text\r\n                    className=\"notes px-4 font-size-large font-italic\"\r\n                  >\r\n                    <span>{item.notes}</span>\r\n                  </Card.Text>\r\n                </Row>\r\n              </div>\r\n            )}\r\n          </ListGroup>\r\n          <ListGroup>\r\n            <Row className=\"justify-content-center\">\r\n              <div>\r\n                <Button\r\n                  type=\"button\"\r\n                  className=\"save btn btn-warning mr-4 text-white\"\r\n                  onClick={update}\r\n                >\r\n                  {item.isEditing ? \"Save\" : \"Update\"}\r\n                </Button>\r\n                <Button\r\n                  type=\"button\"\r\n                  className=\"edit btn btn-dark text-white\"\r\n                  onClick={toTrash}\r\n                >\r\n                  Delete\r\n                </Button>\r\n              </div>\r\n            </Row>\r\n          </ListGroup>\r\n        </Card.Body>\r\n      </Accordion.Collapse>\r\n    </Card>\r\n  </Accordion>\r\n);\r\n\r\n\r\n",{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"30","replacedBy":"34"},{"ruleId":"32","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":2,"column":8,"nodeType":"38","messageId":"39","endLine":2,"endColumn":17},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],["40"],["41"],"no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]